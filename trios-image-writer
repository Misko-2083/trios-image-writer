#!/bin/bash
#
#######################################################################
# TRIOS Image writer                                                  #
# Simple dd wrapper. Uses zenity for GUI dialogs and pv for progress. #
#                                                                     #
# 2015 Filip Danilovic <filip@openmailbox.org>                        #
#                                                                     #
# This is free software. Licenced under GPL v2 or later. :)           #
#######################################################################

show_usage() {
			
	echo -e "\n*******************\nTRIOS Image Writer:\n*******************\n"
	echo -e "Asks the user to select an image file and a destination drive,
then, while showing progress, writes that image to it using good old dd. :)"
	echo -e "\nAccepts the following arguments:"
	echo " -f /path/to/image/file"
	echo " -d /dev/sdX"
	echo -e "\nDefault dd flags used are \"bs=4M\" and \"oflag=dsync\" "
	echo -e "\n2015 Filip Danilovic <filip@openmailbox.org>\n"
	exit
}

while getopts "h?f:d:" arg; do
    case "$arg" in
		f)
		ISO="$OPTARG"
		;;
		d)
		USB=$OPTARG
		;;
		h\?)
		show_usage
		;;
		*)
		show_usage
		;;
	esac
done

# Check zenity version:

ZENITY_V_MAJOR=`zenity --version | cut -d. -f1`
ZENITY_V_MINOR=`zenity --version | cut -d. -f2`

ZENITY_DEF_CANCEL=" "

echo -e "\nUsing zenity v$ZENITY_V_MAJOR.$ZENITY_V_MINOR.*\n"

if [ -z $ZENITY_V_MAJOR ]; then
	echo -e "\n!!!Zenity did not return it's version! It's probably not installed!!!\n"
	exit
fi

if [ "$ZENITY_V_MAJOR" -eq "3" -a "$ZENITY_V_MINOR" -ge "12" ]; then
	ZENITY_DEF_CANCEL="--default-cancel"
fi

if [ -z "$ISO" ]; then
	ISO=$(zenity --file-selection --title="Select image to write:")
	if [ -z "$ISO" ]; then
		exit
	fi
fi

SIZE=$(du -h -B1 "$ISO" | awk '{print $1}')


# zenity --info --text="$(echo "$SIZE\n$ISO")"

drive_select() {

	USB=$(zenity --entry --ok-label=Continue --cancel-label=Quit \
		--title="Select the drive to write to:" --entry-text=/dev/ \
		--text="$(echo "Selected image is:\n$ISO\n" \
&& echo "Find the target USB drive on the list bellow,
then enter it's node in the \"/dev/sdX\" format.\n" \
&& lsblk -o NAME,MODEL,VENDOR,SIZE)")

	if [ -z "$USB" ] ; then
		exit
	fi
}

if [ -z "$USB" ]; then
	drive_select
fi

check() {

	USB_INFO=$(lsblk "$USB" -o NAME,MODEL,VENDOR,SIZE)
	zenity --question "$ZENITY_DEF_CANCEL" --title="Safety check" \
		--text="$(echo "<b>Selected image is:</b>\n$ISO" && echo "\n
<b>Destination drive is \"$USB\".</b>\nDetails: \n$USB_INFO" && echo "\n
<b><u>Start writing?</u></b>")"

	if [[ $? == 0 ]] ; then
		write "$ISO" "$SIZE" "$USB"
	fi
}

#-------------------
#****************
# Write function:
#****************

write() {

	`dirname $0`/tiw-worker "$1" "$2" "$3"

}
#-------------------

if [ -b "$USB" ] ; then
	check
elif [[ "$USB" == "/dev/null" ]]; then
	check
else
	while [ ! -b "$USB" ]
	do
	zenity --question --ok-label=Retry --cancel-label=Quit --title="Error" \
		--text="$(echo "<b>\"$USB\" doesn\'t exist!</b>\nCheck your input.")"
	if [[ $? == 0 ]]; then
		drive_select
	else
		exit
	fi
	done
	check
fi

